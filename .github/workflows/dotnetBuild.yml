name: ReleaseAndBuild

on:
  push:
    tags:
      - '*'
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    

jobs:    
  build-bot:
    name: Build Project and Upload Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build PhipseyyBot --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
ยก
    - name: Publish Linux-arm64
      run: dotnet publish PhipseyyBot -r linux-arm64 -p:PublishSingleFile=true --self-contained 
      
    - name: Publish Linux-x64
      run: dotnet publish PhipseyyBot -r linux-x64 -p:PublishSingleFile=true --self-contained 
      
    - name: Publish Win-x64
      run: dotnet publish PhipseyyBot -r win-x64 -p:PublishSingleFile=true --self-contained
      
    - name: Upload Linux-arm64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Artifact_linux-arm64
        path: /home/runner/work/PhipseyyBot/PhipseyyBot/PhipseyyBot/bin/Release/net8.0/linux-arm64/publish/
        
    - name: Upload Linux-x64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Artifact_linux-x64
        path: /home/runner/work/PhipseyyBot/PhipseyyBot/PhipseyyBot/bin/Release/net8.0/linux-x64/publish/
        
    - name: Upload Win-x64 Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Artifact_win-x64
        path: /home/runner/work/PhipseyyBot/PhipseyyBot/PhipseyyBot/bin/Release/net8.0/win-x64/publish/


  release-bot:
    name: Create Releases
    runs-on: ubuntu-latest
    needs: build-bot
    outputs: 
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}

    steps:
    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: V0.0.${{ github.run_number }}
        release_name: Release V0.0.${{ github.run_number }}
        
        
  linux-arm64-upload:
    name: Upload Linux-arm64 Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-bot, release-bot]
    
    steps:
    - name: Download Linux-arm64 Artifact
      uses: actions/download-artifact@v2
      with:
        name: Artifact_linux-arm64   
        
    - name: Zip Linux-ARM64
      uses: thedoctor0/zip-release@master
      with:
        filename: linux-arm64.zip
        exclusions: '*.pdb*'
        
    - name: Add Linux-arm64 Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release-bot.outputs.upload_url }}
        asset_path: ./linux-arm64.zip
        asset_name: linux-arm64.zip
        asset_content_type: application/zip
        
  linux-x64-upload:
    name: Upload Linux-x64 Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-bot, release-bot]
    
    steps:
    - name: Download Linux-x64 Artifact
      uses: actions/download-artifact@v2
      with:
        name: Artifact_linux-x64   
        
    - name: Zip Linux-ARM64
      uses: thedoctor0/zip-release@master
      with:
        filename: linux-x64.zip
        exclusions: '*.pdb*'
        
    - name: Add Linux-x64 Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release-bot.outputs.upload_url }}
        asset_path: ./linux-x64.zip
        asset_name: linux-x64.zip
        asset_content_type: application/zip
        
        
  windows-upload:
    name: Upload Windows Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-bot, release-bot]
    
    steps:
    - name: Download Win-x64 Artifact
      uses: actions/download-artifact@v2
      with:
        name: Artifact_win-x64
        
    - name: Zip Win-x64
      uses: thedoctor0/zip-release@master
      with:
        filename: win-x64.zip
        exclusions: '*.pdb*'
        
    - name: Add Win-x64 Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release-bot.outputs.upload_url }}
        asset_path: ./win-x64.zip
        asset_name: win-x64.zip
        asset_content_type: application/zip
        
    
        
   
